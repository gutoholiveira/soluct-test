{
    "openapi": "3.0.0",
    "info": {
        "title": "Soluct Test",
        "description": "Soluct Test API Description",
        "version": "1.0.0"
    },
    "paths": {
        "/api/v1/auth/login": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "User Login",
                "description": "Authenticate a user and returns the token if successful.",
                "operationId": "5db09a35f965c6ca7529ed3c3cae8e21",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "email": {
                                        "description": "The email address of the user.",
                                        "type": "string",
                                        "format": "email",
                                        "example": "user@example.com"
                                    },
                                    "password": {
                                        "description": "The user's password.",
                                        "type": "string",
                                        "format": "password",
                                        "example": "securePassword123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful login",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Status message for the login request.",
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "data": {
                                            "properties": {
                                                "token": {
                                                    "description": "Authentication token for the user.",
                                                    "type": "string",
                                                    "example": "2|WLjE7vP6qEU10snFG2wfzSE1drw8zlc6JHgMppO5dc8677b5"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/auth/logout": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "User Logout",
                "description": "Logout the authenticated user by invalidating their token.",
                "operationId": "8f1a443d39c3bf383f851fbb51253c64",
                "responses": {
                    "200": {
                        "description": "Successful logout",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Status message for the logout request.",
                                            "type": "string",
                                            "example": "success"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Token required or invalid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Error message indicating an invalid or missing token.",
                                            "type": "string",
                                            "example": "Unauthorized"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "api/v1/products": {
            "get": {
                "tags": [
                    "Products"
                ],
                "summary": "List Products",
                "description": "Retrieves a list of all products.",
                "operationId": "98fdc6bfafda140e6760c7f569e359bc",
                "responses": {
                    "200": {
                        "description": "Successful retrieval of product list",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Status message for the product retrieval request.",
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "data": {
                                            "properties": {
                                                "products": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/Product"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "api/v1/products/{product}": {
            "get": {
                "tags": [
                    "Products"
                ],
                "summary": "Get Product",
                "description": "Retrieves details of a single product.",
                "operationId": "e6fc1c399f951a5263dde00afb5e821d",
                "parameters": [
                    {
                        "name": "product",
                        "in": "path",
                        "description": "ID of the product",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful retrieval of product details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Status message for the product retrieval request.",
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "data": {
                                            "properties": {
                                                "product": {
                                                    "$ref": "#/components/schemas/Product"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Product not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Products"
                ],
                "summary": "Update Product",
                "description": "Updates an existing product.",
                "operationId": "db3ff30f7d4dd14e19632c090d1d43bd",
                "parameters": [
                    {
                        "name": "product",
                        "in": "path",
                        "description": "ID of the product to be updated",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "status": {
                                        "type": "string",
                                        "example": "published"
                                    },
                                    "url": {
                                        "type": "string",
                                        "example": "https://soluct.com.br"
                                    },
                                    "creator": {
                                        "type": "string",
                                        "example": "User XYZ"
                                    },
                                    "product_name": {
                                        "type": "string",
                                        "example": "Sushi"
                                    },
                                    "quantity": {
                                        "type": "integer",
                                        "example": 3
                                    },
                                    "brands": {
                                        "type": "string",
                                        "example": "Brand Name"
                                    },
                                    "categories": {
                                        "type": "string",
                                        "example": "Health"
                                    },
                                    "labels": {
                                        "type": "string",
                                        "example": "Food"
                                    },
                                    "cities": {
                                        "type": "string",
                                        "example": "Passo Fundo"
                                    },
                                    "purchase_places": {
                                        "type": "string",
                                        "example": "Shopping"
                                    },
                                    "stores": {
                                        "type": "string",
                                        "example": "Sushi House"
                                    },
                                    "ingredients_text": {
                                        "type": "string",
                                        "example": "Fish, Rice"
                                    },
                                    "traces": {
                                        "type": "string",
                                        "example": "Traces Text"
                                    },
                                    "serving_size": {
                                        "type": "string",
                                        "example": "1"
                                    },
                                    "serving_quantity": {
                                        "type": "string",
                                        "example": "100g"
                                    },
                                    "nutriscore_score": {
                                        "type": "integer",
                                        "example": "32"
                                    },
                                    "nutriscore_grade": {
                                        "type": "string",
                                        "example": "A"
                                    },
                                    "main_category": {
                                        "type": "string",
                                        "example": "Food"
                                    },
                                    "image_url": {
                                        "type": "string",
                                        "example": "https://soluct.com/image"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful product update",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Status message for the product update request.",
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "data": {
                                            "properties": {
                                                "product": {
                                                    "$ref": "#/components/schemas/Product"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Product not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Products"
                ],
                "summary": "Delete Product",
                "description": "Deletes a specified product.",
                "operationId": "ac55ba4e7659097f78152e5a28cffef2",
                "parameters": [
                    {
                        "name": "product",
                        "in": "path",
                        "description": "ID of the product to be deleted",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful deletion of the product",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Status message indicating the product was successfully deleted.",
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "data": {
                                            "type": "object",
                                            "example": []
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Product not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "api/v1/products/sync": {
            "post": {
                "tags": [
                    "Products"
                ],
                "summary": "Sync Products",
                "description": "Triggers a routine to import and sync products.",
                "operationId": "32cd47786712d8e7805abaebc02250eb",
                "responses": {
                    "200": {
                        "description": "Successful initiation of sync process",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Status message indicating the sync request was successful.",
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "data": {
                                            "type": "object",
                                            "example": []
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Sync process failed"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "api/v1/users": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "List Users",
                "description": "Retrieves a list of all users.",
                "operationId": "6ee8bea6339515d7bc7a24f038162b86",
                "responses": {
                    "200": {
                        "description": "Successful retrieval of users list",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Status message indicating the success of the request.",
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "data": {
                                            "properties": {
                                                "users": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/User"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No users found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Users"
                ],
                "summary": "Create User",
                "description": "Creates a new user.",
                "operationId": "02903786d9589aeab8d84b9cc13b2f9f",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "email": {
                                        "type": "string",
                                        "example": "johndoe@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "example": "password123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User successfully created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Status message indicating the user was successfully created.",
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/User"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    }
                }
            }
        },
        "api/v1/users/{user}": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Get User",
                "description": "Retrieves details of a specific user by ID.",
                "operationId": "3536ec887a82275fbaef7db8f0d2f911",
                "parameters": [
                    {
                        "name": "user",
                        "in": "path",
                        "description": "ID of the user to retrieve",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful retrieval of user details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Status message indicating the successful retrieval of the user.",
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/User"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Users"
                ],
                "summary": "Update User",
                "description": "Updates an existing user by ID.",
                "operationId": "1915a22b98561c678dc6640a390f837f",
                "parameters": [
                    {
                        "name": "user",
                        "in": "path",
                        "description": "ID of the user to update",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "email": {
                                        "type": "string",
                                        "example": "johndoe@example.com"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User successfully updated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Status message indicating the user was successfully updated.",
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/User"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input or validation error"
                    },
                    "404": {
                        "description": "User not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Users"
                ],
                "summary": "Delete User",
                "description": "Deletes a specific user by ID.",
                "operationId": "c141567c5f99d0b802580b48a6018ee8",
                "parameters": [
                    {
                        "name": "user",
                        "in": "path",
                        "description": "ID of the user to delete",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User successfully deleted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Status message indicating the user was successfully deleted.",
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "string",
                                                "example": ""
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "Product": {
                "properties": {
                    "code": {
                        "description": "Code",
                        "type": "string"
                    },
                    "status": {
                        "description": "Status",
                        "type": "string"
                    },
                    "imported_t": {
                        "description": "Imported date",
                        "type": "string",
                        "format": "date-time"
                    },
                    "url": {
                        "description": "Url",
                        "type": "string"
                    },
                    "creator": {
                        "description": "Product Creator",
                        "type": "string"
                    },
                    "created_t": {
                        "description": "Created at",
                        "type": "integer"
                    },
                    "last_modified_t": {
                        "description": "Last modified at",
                        "type": "integer"
                    },
                    "product_name": {
                        "description": "Product name",
                        "type": "string"
                    },
                    "quantity": {
                        "description": "Quantity",
                        "type": "string"
                    },
                    "brands": {
                        "description": "Brands",
                        "type": "string"
                    },
                    "categories": {
                        "description": "Categories",
                        "type": "string"
                    },
                    "labels": {
                        "description": "Labels",
                        "type": "string"
                    },
                    "cities": {
                        "description": "Cities",
                        "type": "string"
                    },
                    "purchase_places": {
                        "description": "Purchase Places",
                        "type": "string"
                    },
                    "stores": {
                        "description": "Stores",
                        "type": "string"
                    },
                    "ingredients_text": {
                        "description": "Ingredients",
                        "type": "string"
                    },
                    "traces": {
                        "description": "Traces",
                        "type": "string"
                    },
                    "serving_size": {
                        "description": "Serving Size",
                        "type": "string"
                    },
                    "serving_quantity": {
                        "description": "Serving Quantity",
                        "type": "string"
                    },
                    "nutriscore_score": {
                        "description": "Nutriscore score",
                        "type": "integer"
                    },
                    "nutriscore_grade": {
                        "description": "Nutriscore grade",
                        "type": "string"
                    },
                    "main_category": {
                        "description": "Main category",
                        "type": "string"
                    },
                    "image_url": {
                        "description": "Image url",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "User": {
                "properties": {
                    "id": {
                        "description": "Id",
                        "type": "integer"
                    },
                    "name": {
                        "description": "Name",
                        "type": "string"
                    },
                    "email": {
                        "description": "Email",
                        "type": "string"
                    },
                    "created_at": {
                        "description": "Created At",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "description": "Updated At",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            }
        },
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "description": "Enter the auth token",
                "bearerFormat": "JWT",
                "scheme": "bearer"
            }
        }
    },
    "tags": [
        {
            "name": "Authentication",
            "description": "Authentication"
        },
        {
            "name": "Products",
            "description": "Products"
        },
        {
            "name": "Users",
            "description": "Users"
        }
    ]
}